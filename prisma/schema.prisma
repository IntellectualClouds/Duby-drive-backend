datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             Int          @id @default(autoincrement())
  fullname       String       @default("Dummy Name")
  email          String       @unique
  password       String
  profilePicture String?
  phoneNumber    String
  role           Role         @relation(fields: [roleId], references: [id])
  roleId         Int
  active         String       @default("true")
  dealer         Dealer?      
  impressions    Impression[] 
  createdAt      DateTime     @default(now())
}

model Role {
  id    Int    @id @default(autoincrement())
  name  String @unique
  users User[]
}

model Impression {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  car       Car?     @relation(fields: [carId], references: [id])
  carId     Int?
  yacht     Yacht?   @relation(fields: [yachtId], references: [id])
  yachtId   Int?
  createdAt DateTime @default(now())
}

model CarBrand {
  id             Int    @id @default(autoincrement())
  brandName      String @unique
  brandLogo      String?
  description    String?
  activeStatus   String    @default("true")
  descriptionStatus String @default("true")
  cars           Car[]
}

model CarType {
  id   Int    @id @default(autoincrement())
  name String @unique
  cars Car[] 
}

model FuelType {
  id   Int    @id @default(autoincrement())
  name String @unique
  cars Car[] 
}

model InsuranceType {
  id   Int    @id @default(autoincrement())
  name String @unique
  cars Car[]
}

model Car {
  id                        Int           @id @default(autoincrement())
  modelNo                   String        
  licensePlate              String        @unique
  brand                     CarBrand      @relation(fields: [brandId], references: [id])
  brandId                   Int
  type                      CarType       @relation(fields: [typeId], references: [id])
  typeId                    Int
  features                  Feature[]     @relation("CarFeatures")
  active                    String        @default("true")
  description               String?
  doors                     Int
  rentalDays                Int
  seats                     Int
  luggage                   String
  fuelType                  FuelType      @relation(fields: [fuelTypeId], references: [id])
  fuelTypeId                Int
  gssType                   String
  autoTransmission          String
  additionalMileageCharges  String?
  salikTollCharges          String?
  additionalDriverInsurance String
  insuranceType             InsuranceType @relation(fields: [insuranceTypeId], references: [id])
  insuranceTypeId           Int
  interiorColor             String?
  exteriorColor             String?
  dayBasisMileageLimit      Int
  dayBasisCost              Float
  weeklyMileageLimit        Int
  weeklyCost                Float
  monthlyMileageLimit       Int
  monthlyCost               Float
  discountOfferPercentage   String
  discountOfferDate         String
  securityDeposit           String?
  selectRefund              Int?
  driverAge                 Int?
  seoMeta                   String?
  metaKeywords              String[]
  featureImage              String
  carImages                 String[]
  carVideo                  String?
  dealer                    Dealer        @relation(fields: [dealerId], references: [id])
  dealerId                  Int
  impressions               Impression[]  // Track impressions for this car
}

model Feature {
  id    Int    @id @default(autoincrement())
  name  String @unique
  cars  Car[]  @relation("CarFeatures")
}

model YachtType {
  id    Int     @id @default(autoincrement())
  name  String  @unique
  yachts Yacht[]
}

model Location {
  id    Int     @id @default(autoincrement())
  name  String  @unique
  yachts Yacht[]
}

model Yacht {
  id               Int     @id @default(autoincrement())
  name             String
  capacity         String
  size             String
  yachtType        YachtType @relation(fields: [yachtTypeId], references: [id])
  yachtTypeId      Int
  dealer           Dealer    @relation(fields: [dealerId], references: [id])
  dealerId         Int
  captain          Boolean
  crew             Boolean
  location         Location @relation(fields: [locationId], references: [id])
  locationId       Int
  rooms            String
  overview         String
  active           Boolean  @default(true)
  ice              Boolean
  water            Boolean
  softDrinks       Boolean
  freeFuel         Boolean
  towel            Boolean
  bbqEquipment     Boolean
  kidsWelcome      Boolean
  musicSystem      Boolean
  freeRefreshment  Boolean
  fishingEquipment Boolean
  safetyEquipment  Boolean
  bluetooth        Boolean
  usbPort          Boolean
  aux              Boolean
  shower           Boolean
  pillowsBlanket   Boolean
  cooler           Boolean
  airConditioner   Boolean
  microwave        Boolean
  insideSpeaker    Boolean
  outsideSpeaker   Boolean
  audioSystem      Boolean
  hourCost         String
  dayCost          String
  weekCost         String
  meta             String?
  metaKeywords     String[]
  images           String[]
  video            String?
  impressions      Impression[] // Track impressions for this yacht
}

model Package {
  id             Int      @id @default(autoincrement())
  name           String
  duration       String
  logo           String   
  sellPrice      String
  offerPrice     String
  currency       Currency @relation(fields: [currencyId], references: [id])
  currencyId     Int
  carsLimit      Int
  description    String
  verify         Boolean   @default(false)
  featured       Boolean   @default(false)
  premium        Boolean   @default(false)
  active         Boolean   @default(true) 
  dealers        Dealer[]  
}

model Currency {
  id       Int      @id @default(autoincrement())  
  name     String  @unique
  packages Package[]
}

model City {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  image    String
  active   Boolean   @default(true)
  dealers  Dealer[]  
  areas    CityArea[] 
}

model CityArea {
  id        Int     @id @default(autoincrement())
  name      String  @unique
  latitude  String?
  longitude String?
  active    Boolean @default(true)
  cityId    Int     
  city      City    @relation(fields: [cityId], references: [id]) 
  dealers   Dealer[] 
}

model Dealer {
  id                   Int          @id @default(autoincrement())
  name                 String       @unique
  logo                 String?
  contactNumber        String
  whatsappNumber       String
  nationality          String
  packageId            Int
  package              Package      @relation(fields: [packageId], references: [id])
  startDate            DateTime?    @default(now())
  dob                  String?
  emiratesId           String?
  licenseNumber        String?
  vatNumber            String?
  mapLink              String
  cities               City[] 
  deliveryAndPickup    String[]
  languages            String[]
  paymentMethods       String[]
  fastDeliveryLocation CityArea[]
  active               Boolean      @default(true)
  description          String
  address              String
  facebookLink         String?
  instagramLink        String?
  twitterLink          String?
  youtubeLink          String?
  tiktokLink           String?
  metaDescription      String?
  metaKeywords         String[]
  vatDocumentUrl       String
  ejariDocumentUrl     String
  insuranceDocumentUrl String
  idCardUrl            String
  createdAt            DateTime     @default(now())
  updatedAt            DateTime     @updatedAt
  user                 User     @relation(fields: [userId], references: [id])
  userId               Int      @unique
  cars                 Car[]
  yachts               Yacht[]
}
